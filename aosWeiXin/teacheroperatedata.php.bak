<?php
    /*
     * wechat teacher operate data
     */
    
    require_once("utileMethod.php");
    require_once("studentOperateData.php");
    require_once("wx_messageRobot.php");
    
    /*
     *
     老师 基础信息类
     *
     */
    class TeacherInfo
    {
        var $openID;
        var $name;
        var $className;
        var $tel;
        var $Email;
        var $sex;
        var $weixinNum;
        var $image;
        
        //学生签到 数据模型类
        var $stuRegData;
        //学生信息 数据模型类
        var $stuInfoData;
        
        public function TeacherInfo()
        {
            $this->stuRegData = new StudentRegister();
            $this->stuInfoData = new StudentInfo();
        }
        
        //插入数据
        public function insterTeacherInfo($openID, $name, $className, $Email, $tel="18888888888", $sex="1", $weixinNum="88888888", $image="http://")
        {
            //            if ($this->checkTeacherInfo($openID))
            //                return false;
            
            if (!linkMysql())
                return 1;
            
            if (!preg_match("/^1[3|5|8]\d{9}/",$tel))
                return 0;
            
            $tableName = "teacherinfo";
            
            $newSex = judgeSex($sex);
            
            logInfo("$newSex\n");
            
            $result = mysql_query("INSERT INTO $tableName (openID, name, className, tel, Email, sex, weixinNum, image) VALUES (\"$openID\", \"$name\", \"$className\", \"$tel\", \"$Email\", $newSex, \"$weixinNum\", \"$image\")");
            
            if($result)
                return 2;
            else
                return 1;
            
            mysql_close($con);
        }
        
        //根据openID查询数据
        public function checkTeacherInfo($openID)
        {
            if (!linkMysql())
                return false;
            
            $tableName = "teacherinfo";
            
            $sqlSel="SELECT name, className, tel, Email, sex, weixinNum, image FROM $tableName WHERE openID='" . $openID . "'";
            
            $result = mysql_query($sqlSel);
            if (!$result) return false;
            
            $num_rows = mysql_num_rows($result);
            
            if($num_rows >= 1)
            {
                mysql_free_result($result);
                return true;
            }
            else
                return false;
            
            //            mysql_close($con);
        }
        //获取 老师 信息
        public function getTeacherInfo($openID)
        {
            if (!linkMysql())
                return false;
            
            $tableName = "teacherinfo";
            
            $sqlSel="SELECT name, className, tel, Email, sex, weixinNum,type,image FROM $tableName WHERE openID='" . $openID . "'";
            
            $result = mysql_query($sqlSel);
            if (!$result) return false;
            
            $num_rows = mysql_num_rows($result);
            
            $classNameArray = array();
            
            if($num_rows >= 1)
            {
                while ($row = mysql_fetch_array($result))
                {
                    array_push($classNameArray, $row);
                }
            }
            
            return $classNameArray;
        }

        //根据字段 获取 老师 信息
        public function getTeacherInfoByField($field, $info)
        {
            if (!linkMysql())
                return false;
            
            $tableName = "teacherinfo";
            
            $sqlSel="SELECT name, className, tel, Email, sex, weixinNum,type,image FROM $tableName WHERE $field='" . $info . "'";
            
            $result = mysql_query($sqlSel);
            if (!$result) return false;
            
            $num_rows = mysql_num_rows($result);
            
            $classNameArray = array();
            
            if($num_rows >= 1)
            {
                while ($row = mysql_fetch_array($result))
                {
                    array_push($classNameArray, $row);
                }
            }
            
            return $classNameArray;
        }
        
		//查看本班最近一段时间的学生考勤 若时间参数为空 则
		public function getStudentNearRegister($openID, $prdTime)
		{
			$array = $this->getTeacherInfo($openID);

			$nearArray = array();

            foreach ($array as $value)
            {
                $stuArray = $this->stuInfoData->getStudentInfoByClassName($value['className']);
                
				array_push($nearArray, $value['className'] . ":");

                foreach ($stuArray as $stuValue)
                {
                    $stuTimeArray = $this->stuRegData->getStudentTotalRegTimeByField("openID", $stuValue['openID']);
                    
					array_push($nearArray, "★" . $stuValue['name']);

                    foreach ($stuTimeArray as $key=>$timeValue)
                    {
						$curTime = strtotime(date("Y-m-d", time()));
		                $beginMonthTime = strtotime(date("Y-m", time()) . "-01");
                
                        $subTime = ($curTime - $beginMonthTime) / 3600;
                        if ($subTime < 30)
                        {
                            $beginMonthTime = $beginMonthTime - (30 - $subTime) * 3600;
                        }
                        
		                if (strtotime($timeValue) >= $beginMonthTime && strtotime($timeValue) <= $curTime)
						{
							array_push($nearArray, $timeValue);
						}
                    }
                }
            }

            $textMsg = "";

			if (count($nearArray) <= 1)
			{
				$textMsg .= ChatRobot::getFace("不高兴") . " " . "你的班级还没有学生签到哦。\n目测你们班级没学生啊！\n亲，果断快马加鞭招生的说。\n";
			}
			else
			{
				$lastStr = $nearArray[0];

				foreach ($nearArray as $value)
				{
					if (amORpm($value) == 1 && strpos($lastStr, "-"))
						$textMsg .= "\n";

					$lastStr = $value;

					/*if (strpos($lastStr, "-") && (strtotime(date("Y-m-d", strtotime($lastStr))) != strtotime(date("Y-m-d", strtotime($value)))))
					{
						$textMsg .= "\n";
						$lastStr = $value;
					}*/

					$textMsg .= $value . "\n";
				}
			}

            return $textMsg;
		}

        //获取老师 对应的班级 学生考勤
        public function getStudentRegister($openID)
        {
            $array = $this->getTeacherInfo($openID);
            
            $textMsg = "";
            
            foreach ($array as $value)
            {
                $textMsg .= $value['className'] . ":\n";
                
                $stuArray = $this->stuInfoData->getStudentInfoByClassName($value['className']);
                
                if (count($stuArray) == 0)
                {
                    $textMsg .= ChatRobot::getFace("不高兴") . " " . "你的班级还没有学生签到哦。\n目测你们班级没学生啊！\n亲，果断快马加鞭招生的说。\n";
					continue;
                }
                
                foreach ($stuArray as $stuValue)
                {
                    $textMsg .= "★" . $stuValue['name'] . "\n";
                    
                    $stuTimeArray = $this->stuRegData->getStudentTotalRegTimeByField("openID", $stuValue['openID']);
                    
					$lastStr = "";

                    foreach ($stuTimeArray as $key=>$timeValue)
                    {
                        $key = $key + 1;
                        
                        if (amORpm($timeValue) == 1  && strpos($lastStr, "-"))
                            $textMsg .= "\n";
                        
						$lastStr = $timeValue;

                        $textMsg .= $timeValue . "\n";
                    }
                }
            }
            
            return $textMsg;
        }
        
        //获取 学生异常签到时间 异常签到时间指：上午9：00以后签到，或者下午17：00之前签到
//        public function getStuRegAbnormal($openID)
//        {
//            $array = $this->getTeacherInfo($openID);
//            
//            $textMsg = "";
//            
//            $tempStuArray = array ();
//            $oneTotalTimeArray = array ();
//            $dayTimeArray = array ();
//            $tempTimeArray = array ();
//            $lastDay = "";
//            
//            foreach ($array as $value)
//            {
//                $textMsg .= $value['className'] . ":\n";
//                
//                $stuArray = $this->stuInfoData->getStudentInfoByClassName($value['className']);
//                
//                if (count($stuArray) == 0)
//                {
//                    $textMsg .= ChatRobot::getFace("不高兴") . " " . "你的班级还没有学生签到哦。\n目测你们班级没学生啊！\n亲，果断快马加鞭招生的说。\n";
//					continue;
//                }
//                
//				foreach ($stuArray as $stuValue)
//                {
//					$lastName = $stuValue['name'];
//
//                    $stuTimeArray = $this->stuRegData->getStudentTotalRegTimeByField("openID", $stuValue['openID']);
//                    
//                    array_push($tempStuArray, $stuValue);
//                    
//                    foreach ($stuTimeArray as $key=>$timeValue)
//                    {
//                        if ($lastDay != date("Y-m-d", strtotime($timeValue)))
//                        {
//                            if (count($tempTimeArray) != 0)
//                            {
//                                array_push($dayTimeArray, $tempTimeArray);
//                                unset($tempTimeArray);
//                                $lastDay = date("Y-m-d", strtotime($timeValue));
//                            }
//                        }
//                        
//                        if ($key == 0)
//                            $lastDay = date("Y-m-d", strtotime($timeValue));
//                        
//                        array_push($tempTimeArray, $timeValue);
//                        
//                        //加入 此人最后一天的数据
//                        if ($key == (count($stuTimeArray) - 1))
//                        {
//                            if (count($tempTimeArray) != 0)
//                            {
//                                array_push($dayTimeArray, $tempTimeArray);
//                                unset($tempTimeArray);
//                            }
//                        }
//					}
//                    
//                    array_push ($oneTotalTimeArray, $dayTimeArray);
//				}
//			}
//
//            $bAM = true;
//            $bPM = true;
//            
//            foreach ($tempStuArray as $key=>$theStuValue)
//            {
//                $stuName = "★" . $theStuValue['name'] . "\n";
//                
//                file_put_contents('operateDataLog.txt', $key . "key\n",FILE_APPEND);
//                
//                foreach ($oneTotalTimeArray[$key] as $timeValue)
//                {
//                    $timeMsg = "";
//                    
//                    foreach ($timeValue as $value)
//                    {
//                        if (compareTowTime($value, (date("Y-m-d", strtotime($value)) . " 09:00:00")) == 2 && $bAM == true)
//                            $bAM = false;
//                        if (compareTowTime($value, (date("Y-m-d", strtotime($value)) . " 17:00:00")) == 1 && $bPM == true)
//                            $bPM = false;
//                        
//                        $timeMsg .= $value . "\n";
//                        
//                        if (!$bAM && !$bPM)
//                            break;
//                    }
//                    
//                    if ($bAM || $bPM)
//                    {
//                        $textMsg .= $stuName . $timeMsg;
//                    }
//                }
//            }
//
//			return $textMsg;
//		}
//    }
    
    //获取 学生异常签到时间 异常签到时间指：上午9：00以后签到，或者下午17：00之前签到
    public function getStuRegAbnormal($openID)
    {
        $array = $this->getTeacherInfo($openID);
        
        $textMsg = "";
        
        $oneTotalTimeArray = array ();
        
        foreach ($array as $value)
        {
            $textMsg .= $value['className'] . ":\n";
            
            $stuArray = $this->stuInfoData->getStudentInfoByClassName($value['className']);
            
            if (count($stuArray) == 0)
            {
                $textMsg .= ChatRobot::getFace("不高兴") . " " . "你的班级还没有学生签到哦。\n目测你们班级没学生啊！\n亲，果断快马加鞭招生的说。\n";
                continue;
            }
            
            foreach ($stuArray as $stuValue)
            {
                $lastName = $stuValue['name'];
                
                $stuTimeArray = $this->stuRegData->getStudentTotalRegTimeByField("openID", $stuValue['openID']);
                
                foreach ($stuTimeArray as $key=>$timeValue)
                {
                    $oneTotalTimeArray = array(
                                          $stuValue['name'] => $timeValue;
                                        );
                }
            }
        }
        
        foreach ($tempStuArray as $key=>$theStuValue)
        {
            
        }
        
        return $textMsg;
    }
    }
?>